import{_ as h,c as p,j as i,a as o,G as e,w as n,ag as r,B as l,o as k}from"./chunks/framework.BDI6Vt0-.js";const g=JSON.parse('{"title":"Python＋Selenium＋Chromeのウェブスクレイピングで，ボタンクリックを実装する","description":"Python＋Selenium＋Chromeのウェブスクレイピングで，ボタンクリックの操作を容易にするために，コードを実装します","frontmatter":{"title":"Python＋Selenium＋Chromeのウェブスクレイピングで，ボタンクリックを実装する","description":"Python＋Selenium＋Chromeのウェブスクレイピングで，ボタンクリックの操作を容易にするために，コードを実装します","date":"2021-04-19T00:00:00.000Z","category":["Python"],"tags":["Python","Jupyter","Selenium","Web_Scraping"]},"headers":[],"relativePath":"posts/websc_selenium06.md","filePath":"posts/websc_selenium06.md"}'),d={name:"posts/websc_selenium06.md"};function c(u,s,E,m,_,y){const a=l("CallInArticleAdsense"),t=l("ClientOnly");return k(),p("div",null,[s[0]||(s[0]=i("p",null,[o("Python＋Selenium＋Chromeのウェブスクレイピングで，ボタンクリックの操作を容易にするために，コードを実装します．"),i("br")],-1)),e(t,null,{default:n(()=>[e(a)]),_:1}),s[1]||(s[1]=r(`<h2 id="ボタンクリック" tabindex="-1">ボタンクリック <a class="header-anchor" href="#ボタンクリック" aria-label="Permalink to &quot;ボタンクリック&quot;">​</a></h2><p>class名で取得しても，複数のボタンで同じクラス名が使用されているサイトもあるので，ボタンの文字列を指定してクリックするようなコードを実装しました．</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> button_click</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(button_text):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  buttons </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> driver.find_elements_by_tag_name(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> button </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> buttons:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> button.text </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> button_text:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          button.click()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          break</span></span></code></pre></div><h2 id="まとめ" tabindex="-1">まとめ <a class="header-anchor" href="#まとめ" aria-label="Permalink to &quot;まとめ&quot;">​</a></h2><p>Python＋Selenium＋Chromeのウェブスクレイピングで，ボタンクリックの操作を容易にするために，コードを実装しました．</p><br><h2 id="参考サイト" tabindex="-1">参考サイト <a class="header-anchor" href="#参考サイト" aria-label="Permalink to &quot;参考サイト&quot;">​</a></h2><p><a href="https://nonenull.hatenablog.com/entry/2018/07/25/015453" target="_blank" rel="noreferrer">Seleniumでボタンをクリックするときは、ボタンの文字列を取得するのがいい</a><br></p>`,8)),e(t,null,{default:n(()=>[e(a)]),_:1})])}const f=h(d,[["render",c]]);export{g as __pageData,f as default};
