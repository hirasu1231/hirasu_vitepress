import{_ as t,c as e,j as h,G as a,w as p,ag as k,B as l,o as d}from"./chunks/framework.BDI6Vt0-.js";const _=JSON.parse('{"title":"Pythonで地物の最大最小座標を算出する","description":"Pythonで地物の最大最小座標を算出します．","frontmatter":{"title":"Pythonで地物の最大最小座標を算出する","description":"Pythonで地物の最大最小座標を算出します．","date":"2023-4-3","category":["Python"],"tags":["memo","Python","Shapely","Pandas","kowaza0708"]},"headers":[],"relativePath":"posts/shapely_minmax.md","filePath":"posts/shapely_minmax.md"}'),r={name:"posts/shapely_minmax.md"};function o(y,s,g,E,c,m){const i=l("CallInArticleAdsense"),n=l("ClientOnly");return d(),e("div",null,[s[0]||(s[0]=h("p",null,"Pythonで地物の最大最小座標を算出します．",-1)),a(n,null,{default:p(()=>[a(i)]),_:1}),s[1]||(s[1]=k(`<h2 id="ファイル構成" tabindex="-1">ファイル構成 <a class="header-anchor" href="#ファイル構成" aria-label="Permalink to &quot;ファイル構成&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>project_dir</span></span>
<span class="line"><span>├── /data</span></span>
<span class="line"><span>│   ├── /R2_boundary/04_miyagi/04_miyagi.shp</span></span>
<span class="line"><span>│   └── (省略)</span></span>
<span class="line"><span>└── merge_bound.ipynb &lt;- 実行用ノートブック</span></span></code></pre></div><h2 id="地物の最大最小座標" tabindex="-1">地物の最大最小座標 <a class="header-anchor" href="#地物の最大最小座標" aria-label="Permalink to &quot;地物の最大最小座標&quot;">​</a></h2><p>地物の最大最小座標を算出します．</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> geopandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gpd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> matplotlib.pyplot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plt</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> shapely.ops </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> unary_union</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 境界データのshpファイル読込</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pref_gdf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gpd.read_file(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./data/R2_boundary/04_miyagi/04_miyagi.shp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># display(pref_gdf.head(2))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># fig = plt.figure()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ax  = fig.add_subplot()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 境界データをmerge</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bound </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gpd.GeoSeries(unary_union(pref_gdf.geometry))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bound.crs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;epsg:4326&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># # 描画</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># bound.plot(ax=ax, color=&#39;none&#39;, edgecolor=&#39;b&#39;, linewidth=1)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># plt.show()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 境界データの最大最小座標</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># minx, miny, maxx, maxy</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bminx, bminy, bmaxx, bmaxy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bound.bounds.values[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(bminx, bminy, bmaxx, bmaxy)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 140.2746431532175 37.77306121838073 141.6757955950007 39.002877576010704</span></span></code></pre></div><h2 id="まとめ" tabindex="-1">まとめ <a class="header-anchor" href="#まとめ" aria-label="Permalink to &quot;まとめ&quot;">​</a></h2><p>Pythonで地物の最大最小座標を算出しました．</p><h2 id="参考サイト" tabindex="-1">参考サイト <a class="header-anchor" href="#参考サイト" aria-label="Permalink to &quot;参考サイト&quot;">​</a></h2>`,8)),a(n,null,{default:p(()=>[a(i)]),_:1})])}const A=t(r,[["render",o]]);export{_ as __pageData,A as default};
