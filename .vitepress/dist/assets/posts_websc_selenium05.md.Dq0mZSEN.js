import{_ as p,c as o,j as i,a as h,G as e,w as n,ag as r,B as l,o as c}from"./chunks/framework.BDI6Vt0-.js";const E=JSON.parse('{"title":"Python＋Selenium＋Chromeのウェブスクレイピングで，スペースが入った要素を取得する","description":"Python＋Selenium＋Chromeのウェブスクレイピングでは，by_class_nameでスペースが入った要素を取得することができませんので，取得できる手法を紹介します．","frontmatter":{"title":"Python＋Selenium＋Chromeのウェブスクレイピングで，スペースが入った要素を取得する","description":"Python＋Selenium＋Chromeのウェブスクレイピングでは，by_class_nameでスペースが入った要素を取得することができませんので，取得できる手法を紹介します．","date":"2021-04-16T00:00:00.000Z","category":["Python"],"tags":["Python","Jupyter","Selenium","Web_Scraping"]},"headers":[],"relativePath":"posts/websc_selenium05.md","filePath":"posts/websc_selenium05.md"}'),d={name:"posts/websc_selenium05.md"};function k(y,s,_,m,b,u){const a=l("CallInArticleAdsense"),t=l("ClientOnly");return c(),o("div",null,[s[0]||(s[0]=i("p",null,[h("Python＋Selenium＋Chromeのウェブスクレイピングでは，by_class_nameでスペースが入った要素を取得することができませんので，取得できる手法を紹介します．"),i("br")],-1)),e(t,null,{default:n(()=>[e(a)]),_:1}),s[1]||(s[1]=r('<h2 id="by-css-selectorを使用" tabindex="-1">by_css_selectorを使用 <a class="header-anchor" href="#by-css-selectorを使用" aria-label="Permalink to &quot;by_css_selectorを使用&quot;">​</a></h2><p>メソッドを<span style="background-color:#ffff99;">by_class_name</span>ではなく<span style="background-color:#ffff99;">by_css_selector</span>にして，取得します．</p><p>また，by_css_selectorでは，要素の頭と間にあるスペースに「.」を入れる必要があります．</p><p>修正前</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">elem_sample </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> driver.find_elements_by_class_name(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a-link-sample a-text-normal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>修正後</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">elem_sample </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> driver.find_elements_by_css_selector(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.a-link-sample.a-text-normal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>ただし，僕の場合，上記の手法で複数要素を取得しようとすると，<span style="color:#ff0000;">100個の要素の内10個しか取得されない</span>ような，漏れが発生しました．</p><p>そこで，僕は次の手法を主に使っています． <br></p><h2 id="by-xpathを使用" tabindex="-1">by_xpathを使用 <a class="header-anchor" href="#by-xpathを使用" aria-label="Permalink to &quot;by_xpathを使用&quot;">​</a></h2><p><span style="background-color:#ffff99;">by_css_selector</span>で複数要素を取得しようとすると，漏れが発生しましたので，<span style="background-color:#ffff99;">by_xpath</span>を利用した手法も紹介します．</p><p>修正前</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">elem_sample </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> driver.find_elements_by_class_name(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a-link-sample a-text-normal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>修正後</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">elem_sample </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> driver.find_elements_by_xpath(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;//div[@class=&quot;a-link-sample a-text-normal&quot;]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><br><h2 id="まとめ" tabindex="-1">まとめ <a class="header-anchor" href="#まとめ" aria-label="Permalink to &quot;まとめ&quot;">​</a></h2><p>by_class_nameでスペースが入った要素を取得するために，<span style="background-color:#ffff99;">by_css_selectorとby_xpath</span>を利用した2つの手法を紹介しました．</p><p>これでPython＋Selenium＋Chromeのウェブスクレイピングもまた，使いやすくなると思います．</p><br><h2 id="参考サイト" tabindex="-1">参考サイト <a class="header-anchor" href="#参考サイト" aria-label="Permalink to &quot;参考サイト&quot;">​</a></h2><p><a href="https://qiita.com/hanonaibaobabu/items/e547410865d857aa25ec" target="_blank" rel="noreferrer">seleniumでby_class_nameでスペースが入った要素が取得できずエラーになる時の対処法</a><br><a href="https://nekoyukimmm.hatenablog.com/entry/2017/05/09/090117" target="_blank" rel="noreferrer">&lt;Python, selenium&gt; 空白のあるクラス名を選択するには、、</a><br></p>',22)),e(t,null,{default:n(()=>[e(a)]),_:1})])}const f=p(d,[["render",k]]);export{E as __pageData,f as default};
