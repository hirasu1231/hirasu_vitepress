import{_ as l,c as r,j as t,a as i,G as s,w as p,ag as c,B as o,o as d}from"./chunks/framework.BDI6Vt0-.js";const f=JSON.parse('{"title":"CUDAとTensorFlow，PyTorchのversion対応について","description":"PythonでAI系をやっていると，CUDA・TensorFlow・PyTorchのversionの違いでつまずくことがありますので，version対応について記述します．","frontmatter":{"title":"CUDAとTensorFlow，PyTorchのversion対応について","description":"PythonでAI系をやっていると，CUDA・TensorFlow・PyTorchのversionの違いでつまずくことがありますので，version対応について記述します．","date":"2021-03-21T00:00:00.000Z","category":["Python"],"tags":["Python","TensorFlow","PyTorch","CUDA"]},"headers":[],"relativePath":"posts/cuda.md","filePath":"posts/cuda.md"}'),h={name:"posts/cuda.md"};function u(v,a,g,b,m,C){const e=o("CallInArticleAdsense"),n=o("ClientOnly");return d(),r("div",null,[a[0]||(a[0]=t("p",null,[i("PythonでAI系をやっていると，CUDA・TensorFlow・PyTorchのversionの違いでつまずくことが結構あります．"),t("br"),i(" 本稿では，CUDAとTensorFlow，PyTorchのver対応について記述します．")],-1)),s(n,null,{default:p(()=>[s(e)]),_:1}),a[1]||(a[1]=c(`<h2 id="tensorflowとの対応表について" tabindex="-1">TensorFlowとの対応表について <a class="header-anchor" href="#tensorflowとの対応表について" aria-label="Permalink to &quot;TensorFlowとの対応表について&quot;">​</a></h2><p>!(/image/CUDA_tf.png)</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># GPUが使用できるかを確認</span></span>
<span class="line"><span>import TensorFlow as tf</span></span>
<span class="line"><span>device_name = tf.test.gpu_device_name()</span></span>
<span class="line"><span>if device_name != &#39;/device:GPU:0&#39;:</span></span>
<span class="line"><span>  print(&#39;GPU device not found&#39;)</span></span>
<span class="line"><span>print(&#39;Found GPU at: {}&#39;.format(device_name))</span></span></code></pre></div><h2 id="pytorchとの対応について" tabindex="-1">PyTorchとの対応について <a class="header-anchor" href="#pytorchとの対応について" aria-label="Permalink to &quot;PyTorchとの対応について&quot;">​</a></h2><p><a href="https://PyTorch.org/get-started/previous-versions/" target="_blank" rel="noreferrer">PyTorchとCUDAの対応について</a></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># GPUが使用できるかを確認</span></span>
<span class="line"><span>import torch</span></span>
<span class="line"><span>print(torch.CUDA.is_available())</span></span></code></pre></div><h2 id="cuda" tabindex="-1">CUDA <a class="header-anchor" href="#cuda" aria-label="Permalink to &quot;CUDA&quot;">​</a></h2><p>CUDA ToolkitとNVIDIAドライバの各バージョンについて，以下の画像に示します． !(/image/cuda_nvidia.png)</p><h3 id="前準備" tabindex="-1">前準備 <a class="header-anchor" href="#前準備" aria-label="Permalink to &quot;前準備&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt update</span></span>
<span class="line"><span>sudo apt-get update</span></span></code></pre></div><h3 id="nvidiaドライバのインストール" tabindex="-1">Nvidiaドライバのインストール <a class="header-anchor" href="#nvidiaドライバのインストール" aria-label="Permalink to &quot;Nvidiaドライバのインストール&quot;">​</a></h3><p>Nvidiaドライバをインストールします． 該当ドライバのバージョンのインストールがうまくいかない場合は、バージョンを少しずつ下げてみるのがお勧めです．</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt update</span></span>
<span class="line"><span># インストール可能なドライバのバージョンを確認</span></span>
<span class="line"><span>apt-cache search &#39;nvidia-[0-9]+$&#39;</span></span>
<span class="line"><span># ドライバのインストール(ここではnvidia-361)</span></span>
<span class="line"><span>sudo apt-get install nvidia-361</span></span></code></pre></div><p>また，Nvidiaの公式サイトからもドライバをインストールできます． <a href="https://www.nvidia.co.jp/Download/index.aspx?lang=jp#" target="_blank" rel="noreferrer">NVIDIAドライバダウンロード</a><br> !(/image/nvidia_dl.png)</p><h3 id="cudaのインストール" tabindex="-1">CUDAのインストール <a class="header-anchor" href="#cudaのインストール" aria-label="Permalink to &quot;CUDAのインストール&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get update</span></span>
<span class="line"><span>sudo apt-get install build-essential</span></span>
<span class="line"><span>sudo apt-get install CUDA-10-0</span></span></code></pre></div><h3 id="実行環境の確認" tabindex="-1">実行環境の確認 <a class="header-anchor" href="#実行環境の確認" aria-label="Permalink to &quot;実行環境の確認&quot;">​</a></h3><p>以下のコードでCUDAのversionを確認します．<br><code>watch -n 0.5</code>はコードを回している間に，GPUの使用状況を見る場合にも便利です．</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nvcc --version</span></span></code></pre></div><p>以下のコードでgpuの使用状況を確認．</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#0.5秒毎にnvidia-smiの情報を更新して表示する</span></span>
<span class="line"><span>watch -n 0.5 nvidia-smi</span></span></code></pre></div><h2 id="参考サイト" tabindex="-1">参考サイト <a class="header-anchor" href="#参考サイト" aria-label="Permalink to &quot;参考サイト&quot;">​</a></h2><ul><li><a href="https://katsuwosashimi.com/archives/742/how-to-choose-CUDA-version-PyTorch/" target="_blank" rel="noreferrer">PyTorchインストール時のCUDAバージョンの選び方</a></li><li><a href="https://qiita.com/chin_self_driving_car/items/f00af2dbd022b65c9068" target="_blank" rel="noreferrer">TensorFlow GPU, CUDA, CuDNNのバージョン早見表</a></li></ul>`,23)),s(n,null,{default:p(()=>[s(e)]),_:1})])}const k=l(h,[["render",u]]);export{f as __pageData,k as default};
