import{_ as t,c as p,j as n,a as r,G as i,w as l,ag as k,B as h,o}from"./chunks/framework.BDI6Vt0-.js";const b=JSON.parse('{"title":"Python＋Docker＋Selenium＋Chromeでウェブスクレイピングをする part1","description":"Python＋Docker＋Selenium＋Chromeで甘茶の音楽工房ウェブスクレイピングします．本稿では，一通りの設定を実施します．","frontmatter":{"title":"Python＋Docker＋Selenium＋Chromeでウェブスクレイピングをする part1","description":"Python＋Docker＋Selenium＋Chromeで甘茶の音楽工房ウェブスクレイピングします．本稿では，一通りの設定を実施します．","date":"2021-02-11T00:00:00.000Z","category":["Python"],"tags":["Python","Jupyter","Docker","Selenium","Web_Scraping"]},"headers":[],"relativePath":"posts/websc_selenium01.md","filePath":"posts/websc_selenium01.md"}'),c={name:"posts/websc_selenium01.md"};function d(E,s,m,g,y,u){const a=h("CallInArticleAdsense"),e=h("ClientOnly");return o(),p("div",null,[s[0]||(s[0]=n("p",null,[r("Python＋Docker＋Selenium＋Chromeで甘茶の音楽工房ウェブスクレイピングします．本稿では，一通りの設定を実施します．"),n("br")],-1)),i(e,null,{default:l(()=>[i(a)]),_:1}),s[1]||(s[1]=k(`<p>ただし，jupyter or pythonはローカルです．<br> 作業用BGMとして<a href="https://amachamusic.chagasi.com/image_kurai.html" target="_blank" rel="noreferrer">甘茶の音楽工房</a>の音楽をダウンロードして聞いていました．いい加減面倒臭くなってきたので，ウェブスクレイピングでダウンロードしていきます．</p><h2 id="selenium" tabindex="-1">Selenium <a class="header-anchor" href="#selenium" aria-label="Permalink to &quot;Selenium&quot;">​</a></h2><p>本稿では，seleniumでウェブスクレイピングを実施します．以前はrequestsとBeautifulSoupでスクレイピングしていましたが，jsで情報を挿入しているサイトではスクレイピングできないことがありましたので，seleniumを使います．<br> ちなみに，スクレイピングできなかったサイトは，Fanzaです!!!<br> DVDのサンプル画像をスクレイピングしようとしていましたwww</p><h2 id="seleniumとは" tabindex="-1">Seleniumとは <a class="header-anchor" href="#seleniumとは" aria-label="Permalink to &quot;Seleniumとは&quot;">​</a></h2><blockquote><p>Selenium は Web ブラウザの操作を自動化するためのフレームワークです。 2004 年に ThoughtWorks 社によって Web アプリケーションの UI テストを自動化する目的で開発されました。 <a href="https://selenium.dev/history/" target="_blank" rel="noreferrer">https://selenium.dev/history/</a> 元々は Web アプsリケーションの UI テストや JavaScript のテストの目的で開発されましたが、テスト以外にもタスクの自動化や Web サイトのクローリングなど様々な用途で利用されています。</p></blockquote><h2 id="docker-selenium-chrome" tabindex="-1">Docker＋Selenium＋Chrome <a class="header-anchor" href="#docker-selenium-chrome" aria-label="Permalink to &quot;Docker＋Selenium＋Chrome&quot;">​</a></h2><p>本稿では，Docker上でSeleniumを使います．dockerで使う理由として，chrome driverのversion管理が面倒臭いからです．<br> 有志の方がわかりやすくしてくれているので，がっつりあやかります．</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>docker run -d -p 4444:4444 -v /dev/shm:/dev/shm selenium/standalone-chrome:4.0.0-beta-1-prerelease-20201208</span></span></code></pre></div><h3 id="docker-selenium-chromeの起動確認" tabindex="-1">Docker＋Selenium＋Chromeの起動確認 <a class="header-anchor" href="#docker-selenium-chromeの起動確認" aria-label="Permalink to &quot;Docker＋Selenium＋Chromeの起動確認&quot;">​</a></h3><p>Docker＋Selenium＋Chromeの起動を確認します．また，ローカル上のChromeを使う際のコードも記載しておきます．</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># dockerのselenium</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selenium </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> webdriver</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Chrome のオプションを設定する</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> webdriver.ChromeOptions()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Selenium Server に接続する</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> webdriver.Remote(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    command_executor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;http://localhost:4444/wd/hub&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Selenium 経由でブラウザを操作する</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://amachamusic.chagasi.com/image_ayashii.html&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver.get(url)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(driver.current_url)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 出力:https://amachamusic.chagasi.com/image_ayashii.html</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ローカル上のchromeを使う場合．</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># coding: UTF-8</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selenium </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> webdriver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selenium.webdriver.chrome.options </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Options</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selene.driver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SeleneDriver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> webdriver_manager.utils </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome_version</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> webdriver_manager.chrome </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromeDriverManager</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># versionに応じたchrome driver のインストール</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome_version()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http://chromedriver.storage.googleapis.com/LATEST_RELEASE_&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> version</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests.get(url)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Options()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options.add_argument(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;--headless&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># インストールしたchrome driverでchromeを起動</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SeleneDriver.wrap(webdriver.Chrome(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    executable_path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ChromeDriverManager().install(), </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    chrome_options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Selenium 経由でブラウザを操作する</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://amachamusic.chagasi.com/image_ayashii.html&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver.get(url)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(driver.current_url)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 出力:https://amachamusic.chagasi.com/image_ayashii.html</span></span></code></pre></div><h2 id="まとめ" tabindex="-1">まとめ <a class="header-anchor" href="#まとめ" aria-label="Permalink to &quot;まとめ&quot;">​</a></h2><p>ここまででDocker＋Selenium＋Chromeの起動を実施しました．おおよその次の記事でSeleniumの操作を検索しながら，必要な工程を実装します．<br> 時間があれば，docker composeまでやってDocker上のjupyterでやりたいです．</p><h2 id="参考サイト" tabindex="-1">参考サイト <a class="header-anchor" href="#参考サイト" aria-label="Permalink to &quot;参考サイト&quot;">​</a></h2><p><a href="https://qiita.com/Chanmoro/items/9a3c86bb465c1cce738a" target="_blank" rel="noreferrer">10分で理解する Selenium</a><br><a href="https://qiita.com/sikkim/items/447b72e6ec45849058cd" target="_blank" rel="noreferrer">Docker上でSeleniumとHeadless ChromeとPython3を動かす</a><br><a href="https://qiita.com/kei0919/items/f6f696169c92c936374c" target="_blank" rel="noreferrer">Dockerコンテナからseleniumを使ってスクレイピング</a><br><a href="https://qiita.com/maroKanatani/items/e52984f37cc5474ccd98" target="_blank" rel="noreferrer">Python×SeleniumでWebスクレイピング実践</a><br></p>`,16)),i(e,null,{default:l(()=>[i(a)]),_:1})])}const A=t(c,[["render",d]]);export{b as __pageData,A as default};
