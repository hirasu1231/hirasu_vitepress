import{_ as l,c as p,j as e,G as i,w as n,ag as k,B as h,o as d}from"./chunks/framework.BDI6Vt0-.js";const A=JSON.parse('{"title":"YouTube Data API を使ってキーワード検索から動画のタイトル等の情報を取得する","description":"YouTube Data API を使ってキーワード検索から動画のタイトル等の情報を取得します．","frontmatter":{"title":"YouTube Data API を使ってキーワード検索から動画のタイトル等の情報を取得する","description":"YouTube Data API を使ってキーワード検索から動画のタイトル等の情報を取得します．","date":"2021-08-21T00:00:00.000Z","category":["Python"],"tags":["Python","jupyter","YouTube_Data_API","YouTube"]},"headers":[],"relativePath":"posts/youtube_API_02.md","filePath":"posts/youtube_API_02.md"}'),r={name:"posts/youtube_API_02.md"};function E(y,s,g,o,F,u){const a=h("CallInArticleAdsense"),t=h("ClientOnly");return d(),p("div",null,[s[0]||(s[0]=e("p",null,"YouTube Data API を使ってキーワード検索から動画のタイトル等の情報を取得します．",-1)),i(t,null,{default:n(()=>[i(a)]),_:1}),s[1]||(s[1]=k(`<h2 id="youtube-data-apとは" tabindex="-1">YouTube Data APとは <a class="header-anchor" href="#youtube-data-apとは" aria-label="Permalink to &quot;YouTube Data APとは&quot;">​</a></h2><blockquote><p>YouTubeが提供しているAPIで、動画やチャンネル、再生リストに関わる情報を取得して、自分のWebサイトやアプリケーションで使用することができます。<br> 公式のドキュメントが用意されているので、詳しくはこちらをご覧ください。<br><a href="https://developers.google.com/youtube/v3/getting-started?hl=ja" target="_blank" rel="noreferrer">https://developers.google.com/youtube/v3/getting-started?hl=ja</a><br> 引用元:<a href="https://liginc.co.jp/497428#:~:text=%E3%81%BE%E3%81%A8%E3%82%81-,YouTube%20Data%20API%E3%81%A8%E3%81%AF,%E3%81%99%E3%82%8B%E3%81%93%E3%81%A8%E3%81%8C%E3%81%A7%E3%81%8D%E3%81%BE%E3%81%99%E3%80%82" target="_blank" rel="noreferrer">YouTube Data API v3を使用して、YouTubeページと同じリストモジュールを作ってみた</a></p></blockquote><blockquote><p>YouTube が提供している API で、動画やチャンネルなど情報を取得して、自分の Web サイトやアプリケーションで使用することができます。<br> 一日あたりのAPI使用量（クォータ）の上限が10000になっているので、注意して使用してください。<br> 引用元:<a href="https://qiita.com/ryoya41/items/dd1fd4c1427ece787eea" target="_blank" rel="noreferrer">【Python】YouTube Data API を使って、いろんな情報を取得してみた！</a></p></blockquote><h2 id="モジュールのインストール" tabindex="-1">モジュールのインストール <a class="header-anchor" href="#モジュールのインストール" aria-label="Permalink to &quot;モジュールのインストール&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pip install google</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">client</span></span></code></pre></div><h2 id="youtubeの情報を取得-1つの動画" tabindex="-1">youtubeの情報を取得(1つの動画) <a class="header-anchor" href="#youtubeの情報を取得-1つの動画" aria-label="Permalink to &quot;youtubeの情報を取得(1つの動画)&quot;">​</a></h2><p>特定のキーワードで検索かけて，複数の動画の情報を取得します．</p><p>最終的には,DataFrameで出力します．</p><p>ここでは，以下の情報を取得します．</p><ul><li>video_id</li><li>タイトル</li><li>クレイピング日時</li><li>動画の公開日時</li><li>チャンネルタイトル</li><li>チャンネルID</li><li>概要欄</li><li>サムネイル</li></ul><h3 id="youtubeの情報をjson形式で取得" tabindex="-1">youtubeの情報をJson形式で取得 <a class="header-anchor" href="#youtubeの情報をjson形式で取得" aria-label="Permalink to &quot;youtubeの情報をJson形式で取得&quot;">​</a></h3><p>ここでは，特定キーワードを含むタイトルの動画を再生回数順でJson形式で取得します．</p><ul><li>part:取得情報(snippet)</li><li>q：キーワード</li><li>order：ソートする項目 <ul><li>date：リソースを作成日の新しい順に並べます。</li><li>rating：リソースを評価の高い順に並べます。</li><li>relevance：リソースを検索クエリの関連性が高い順に並べます。このパラメータのデフォルト値です。</li><li>title：リソースをタイトルのアルファベット順に並べます。</li><li>videoCount：アップロード動画の番号順（降順）にチャンネルを並べます。</li><li>viewCount：リソースを再生回数の多い順に並べます。</li></ul></li><li>type：検索対象のタイプ(channel・playlist・video)</li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> apiclient.discovery </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YOUTUBE_API_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;AIzaSyCjNsPtyaDBn0_mOW0DbxNhU9BxkCrqPAs&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">youtube </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> build(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;youtube&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">developerKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YOUTUBE_API_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">search_response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> youtube.search().list(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    part</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;snippet&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #検索したい文字列を指定</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ボードゲーム&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #視聴回数が多い順に取得</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;viewCount&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;video&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ).execute()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1度に取得できる数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;json_length：</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.format(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(search_response[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;items&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Json形式での情報</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">display(search_response[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;items&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><pre><code>json_length：5



{&#39;kind&#39;: &#39;youtube#searchResult&#39;,
 &#39;etag&#39;: &#39;WPSsGnBDDsoYs6kDsziwxAeQx-0&#39;,
 &#39;id&#39;: {&#39;kind&#39;: &#39;youtube#video&#39;, &#39;videoId&#39;: &#39;ASusE5qjoAg&#39;},
 &#39;snippet&#39;: {&#39;publishedAt&#39;: &#39;2019-05-31T11:58:15Z&#39;,
  &#39;channelId&#39;: &#39;UCutJqz56653xV2wwSvut_hQ&#39;,
  &#39;title&#39;: &#39;【目指せ商品化】文理対抗！ガチンコボードゲーム作り対決！&#39;,
  &#39;description&#39;: &#39;東海オンエアってもう｢チャンネル登録してください｣とか｢高評価よろしくお願いします｣とか言わなくなっちゃったけど、やっぱり言ったほうがいいってばよ？ チャンネル登録 ...&#39;,
  &#39;thumbnails&#39;: {&#39;default&#39;: {&#39;url&#39;: &#39;https://i.ytimg.com/vi/ASusE5qjoAg/default.jpg&#39;,
    &#39;width&#39;: 120,
    &#39;height&#39;: 90},
   &#39;medium&#39;: {&#39;url&#39;: &#39;https://i.ytimg.com/vi/ASusE5qjoAg/mqdefault.jpg&#39;,
    &#39;width&#39;: 320,
    &#39;height&#39;: 180},
   &#39;high&#39;: {&#39;url&#39;: &#39;https://i.ytimg.com/vi/ASusE5qjoAg/hqdefault.jpg&#39;,
    &#39;width&#39;: 480,
    &#39;height&#39;: 360}},
  &#39;channelTitle&#39;: &#39;東海オンエア&#39;,
  &#39;liveBroadcastContent&#39;: &#39;none&#39;,
  &#39;publishTime&#39;: &#39;2019-05-31T11:58:15Z&#39;}}
</code></pre><h3 id="youtubeの情報をdataframe形式で取得" tabindex="-1">youtubeの情報をDataFrame形式で取得 <a class="header-anchor" href="#youtubeの情報をdataframe形式で取得" aria-label="Permalink to &quot;youtubeの情報をDataFrame形式で取得&quot;">​</a></h3><p>ここでは，特定キーワードを含むタイトルの動画を再生回数順でDataFrame形式で取得します．</p><p>また，任意の動画数分だけ取得できるようにもしています．</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#numに入れた数字×5件の情報を取得</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#その他のパラメーターはAPIから情報を取得するパラメータと同じ</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 動画のタイトル等を抜粋()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get_video_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(part, q, order, type, num):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dic_list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    search_response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> youtube.search().list(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">part</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">part,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">q,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">order,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    output </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> youtube.search().list(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">part</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">part,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">q</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">q,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">order,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).execute()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #一度に5件しか取得できないため何度も繰り返して実行</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(num):        </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        dic_list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dic_list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> output[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;items&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        search_response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> youtube.search().list_next(search_response, output)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        output </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> search_response.execute()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.DataFrame(dic_list)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #各動画毎に一意のvideoIdを取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    df1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.DataFrame(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(df[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;videoId&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #各動画毎に一意のvideoIdを取得必要な動画情報だけ取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    df2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.DataFrame(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(df[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;snippet&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))[[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;channelTitle&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;publishedAt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;channelId&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;title&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;description&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;thumbnails&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ddf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.concat([df1,df2], </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">axis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 日本時刻に修正+9hours</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ddf[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;publishedAt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.to_datetime(ddf[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;publishedAt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> datetime.timedelta(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hours</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ddf</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 引数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">part</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;snippet&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">q </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;ボードゲーム&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">order </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;date&#39;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;video&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">num </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #Max:75/day-&gt;75*5=375本/day</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># APIの取得</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YOUTUBE_API_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;＊＊＊＊＊＊＊＊＊＊＊＊&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">youtube </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> build(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;youtube&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">developerKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YOUTUBE_API_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 情報をデータフレーム形式で取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df_youtube </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> get_video_info(part, q, order, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, num)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">display(df_youtube.head())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># csvに出力</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># df_info.to_csv(&#39;{}_scape.csv&#39;.format(scrape_date), index=False)</span></span></code></pre></div><div><table border="1" class="dataframe"><thead><tr style="text-align:right;"><th></th><th>videoId</th><th>channelTitle</th><th>publishedAt</th><th>channelId</th><th>title</th><th>description</th><th>thumbnails</th></tr></thead><tbody><tr><th>0</th><td>4o2iX-BVcUQ</td><td>アジトベル 恵比寿のボードゲームカフェ</td><td>2021-06-15T23:00:04Z</td><td>UC3FA3Kz65VhfkuVQJWMyOAw</td><td>【おすすめボードゲーム】そこにそんなに⁉とんでもないところにこだわったボードゲーム3選【028】</td><td>製作者の愛を感じる♪ ▽△▽△▽△▽△▽△▽△▽△▽△▽△▽△▽△▽△ ☆アジトベル 恵比寿...</td><td>{&#39;default&#39;: {&#39;url&#39;: &#39;https://i.ytimg.com/vi/4o...</td></tr><tr><th>1</th><td>e7JziFcyAyY</td><td>hobby again</td><td>2021-06-15T18:57:41Z</td><td>UC2lXqscjLeLc7F0H_4GKTug</td><td>アナと雪の女王２　ストーリーボードゲーム　王国のひみつ　ディズニー　エポック社　買う前の確認...</td><td>かうまえのかくにんようだよ.</td><td>{&#39;default&#39;: {&#39;url&#39;: &#39;https://i.ytimg.com/vi/e7...</td></tr><tr><th>2</th><td>mCdnSLRLl38</td><td>LAP Youtube</td><td>2021-06-15T16:49:40Z</td><td>UCB-rg55VHCylqGcJAiDBt1Q</td><td>【居酒屋eラジオ】おもしろボードゲーム＆Knockout City</td><td>福岡女子 タレント3人がお酒を片手に #生配信 おしゃべりや #ゲーム やっちゃいます！ 女...</td><td>{&#39;default&#39;: {&#39;url&#39;: &#39;https://i.ytimg.com/vi/mC...</td></tr><tr><th>3</th><td>cDWKV7l9NbI</td><td>きたこしちゃんねる</td><td>2021-06-15T14:54:52Z</td><td>UCQD1KbDFa25mnfUnF6ldzXw</td><td>【 #ボドこし 74】カートグラファー【バーチャルゲームカフェ】ボードゲームで遊ぼうよ！</td><td>1人から100人で遊べる？！紙ペンゲーム カートグラファーのご紹介&amp;ソロプレイ配信です。 当...</td><td>{&#39;default&#39;: {&#39;url&#39;: &#39;https://i.ytimg.com/vi/cD...</td></tr><tr><th>4</th><td>1Lx9rBOS150</td><td>sangenya</td><td>2021-06-15T12:17:26Z</td><td>UCUTG51hFXQavzdyAYmdN9XA</td><td>ボードゲーム制作 作業配信 五稜郭 0.10.2</td><td>マイクはありません。 https://twitter.com/toshi_kadota Mu...</td><td>{&#39;default&#39;: {&#39;url&#39;: &#39;https://i.ytimg.com/vi/1L...</td></tr></tbody></table></div><h2 id="参考サイト" tabindex="-1">参考サイト <a class="header-anchor" href="#参考サイト" aria-label="Permalink to &quot;参考サイト&quot;">​</a></h2><p><a href="https://qiita.com/ryoya41/items/dd1fd4c1427ece787eea" target="_blank" rel="noreferrer">【Python】YouTube Data API を使って、いろんな情報を取得してみた！</a></p><p><a href="https://liginc.co.jp/497428#:~:text=%E3%81%BE%E3%81%A8%E3%82%81-,YouTube%20Data%20API%E3%81%A8%E3%81%AF,%E3%81%99%E3%82%8B%E3%81%93%E3%81%A8%E3%81%8C%E3%81%A7%E3%81%8D%E3%81%BE%E3%81%99%E3%80%82" target="_blank" rel="noreferrer">YouTube Data API v3を使用して、YouTubeページと同じリストモジュールを作ってみた</a></p><p><a href="https://qiita.com/g-k/items/7c98efe21257afac70e9" target="_blank" rel="noreferrer">Youtube Data APIを使ってPythonでYoutubeデータを取得する</a></p><p><a href="https://developers.google.com/youtube/v3/docs/search/list?hl=ja" target="_blank" rel="noreferrer">Search: list | YouTube Data API | Google Developers</a></p>`,26)),i(t,null,{default:n(()=>[i(a)]),_:1})])}const b=l(r,[["render",E]]);export{A as __pageData,b as default};
