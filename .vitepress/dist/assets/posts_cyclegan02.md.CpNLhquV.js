import{_ as e,c as h,j as t,a as k,G as i,w as l,ag as r,B as p,o}from"./chunks/framework.BDI6Vt0-.js";const _=JSON.parse('{"title":"Python + CycleGanでオリジナルデータでの学習を実装する","description":"Python + CycleGanでオリジナルデータでの学習を実行します．本稿ではディアブロス(原種)とディアブロス亜種の変換を実施します．","frontmatter":{"title":"Python + CycleGanでオリジナルデータでの学習を実装する","description":"Python + CycleGanでオリジナルデータでの学習を実行します．本稿ではディアブロス(原種)とディアブロス亜種の変換を実施します．","date":"2021-03-29T00:00:00.000Z","category":["Python"],"tags":["Python","Jupyter","CycleGAN","GAN"]},"headers":[],"relativePath":"posts/cyclegan02.md","filePath":"posts/cyclegan02.md"}'),d={name:"posts/cyclegan02.md"};function c(y,s,g,E,b,A){const a=p("CallInArticleAdsense"),n=p("ClientOnly");return o(),h("div",null,[s[0]||(s[0]=t("p",null,[k("Python + CycleGanでオリジナルデータでの学習を実装を目指して，本稿ではディアブロス(原種)とディアブロス亜種の変換を実施します．"),t("br")],-1)),i(n,null,{default:l(()=>[i(a)]),_:1}),s[1]||(s[1]=r(`<p>今回はGoogle ColabとGoogle Driveを連携させて，notebook形式で実行してます．<br></p><blockquote><p>Google Colaboratory（以下Google Colab）は、Google社が無料で提供している機械学習の教育や研究用の開発環境です。開発環境はJupyter Notebookに似たインターフェースを持ち、Pythonの主要なライブラリがプリインストールされています。<br> 引用元：<a href="https://interface.cqpub.co.jp/ail01/" target="_blank" rel="noreferrer">Google Colabの使い方</a></p></blockquote><p>最終的に，実写モンハンのディアブロス亜種を原種に戻す試みをします． !(/image/diablos_black.jpg)</p><h2 id="作業ディレクトリのファイル構成" tabindex="-1">作業ディレクトリのファイル構成 <a class="header-anchor" href="#作業ディレクトリのファイル構成" aria-label="Permalink to &quot;作業ディレクトリのファイル構成&quot;">​</a></h2><p>プロジェクトディレクトリはdiablos_ganとしています．度々，省略しています．</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>diablos_gan</span></span>
<span class="line"><span>├── /pytorch-CycleGAN-and-pix2pix</span></span>
<span class="line"><span>│   ├── /checkpoints &lt;- 学習モデルの保存先</span></span>
<span class="line"><span>│   │   └── /diablos_gan</span></span>
<span class="line"><span>│   │       ├── /web &lt;- 学習中の変換画像</span></span>
<span class="line"><span>│   │       ├── latest_net_G.pth &lt;- テストで使う変換モデル</span></span>
<span class="line"><span>│   │       ├── latest_net_G_A.pth &lt;- AからBへの変換モデル</span></span>
<span class="line"><span>│   │       └── latest_net_G_B.pth &lt;- BからAへの変換モデル</span></span>
<span class="line"><span>│   ├── /results &lt;- 出力される変換画像</span></span>
<span class="line"><span>│   │   └── /diablos_gan</span></span>
<span class="line"><span>│   ├── /datasets &lt;- 学習データ</span></span>
<span class="line"><span>│   │   ├── diablos_gan.zip</span></span>
<span class="line"><span>│   │   └── /diablos_gan</span></span>
<span class="line"><span>│   │       ├── trainA</span></span>
<span class="line"><span>│   │       ├── testA</span></span>
<span class="line"><span>│   │       ├── trainB</span></span>
<span class="line"><span>│   │       └── testB</span></span>
<span class="line"><span>│   ├── requirements.txt</span></span>
<span class="line"><span>│   ├── train.py</span></span>
<span class="line"><span>│   ├── test.py</span></span>
<span class="line"><span>│   └── (省略)</span></span>
<span class="line"><span>└── diablos_gan.ipynb &lt;- 実行用ノートブック</span></span></code></pre></div><h2 id="オリジナルデータの学習" tabindex="-1">オリジナルデータの学習 <a class="header-anchor" href="#オリジナルデータの学習" aria-label="Permalink to &quot;オリジナルデータの学習&quot;">​</a></h2><p>ディアブロスとディアブロス亜種の画像を準備して，オリジナルデータでの学習を実施します．</p><h3 id="学習データの準備" tabindex="-1">学習データの準備 <a class="header-anchor" href="#学習データの準備" aria-label="Permalink to &quot;学習データの準備&quot;">​</a></h3><p>ディアブロスとディアブロス亜種のGoogle画像検索をウェブスクレイピングして，準備しました．<br> Google Driveでデータをやりとりする場合は，zipで圧縮したものをアップロードして，Colab上で回答した方がエラーも発生しづらくおすすめです．<br> 以下のコマンドでzipの解凍ができます．</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ディレクトリの移動</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">content</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">drive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">My\\ </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Drive/diablos_gan/pytorch-CycleGAN-and-pix2pix/datasets</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 学習データの解凍</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">unzip diablos_gan.zip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dev</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">null</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># データ数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># (trainA, testA) = (80, 16)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># (trainB, testB) = (80, 16)</span></span></code></pre></div><h3 id="オリジナルデータの学習-1" tabindex="-1">オリジナルデータの学習 <a class="header-anchor" href="#オリジナルデータの学習-1" aria-label="Permalink to &quot;オリジナルデータの学習&quot;">​</a></h3><p>以下のコマンドで学習を実行できます．<br></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ディレクトリの移動</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">content</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">drive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">My\\ </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Drive/diablos_gan/pytorch-CycleGAN-and-pix2pix</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># オリジナルデータの学習</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python train.py </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dataroot .</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">datasets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">diablos_gan \\</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">                 --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n_epochs </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \\</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">                 --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name diablos_gan \\</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">                 --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model cycle_gan \\</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">                 --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">display_id </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gpu_ids </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span></code></pre></div><h3 id="オリジナルデータの学習モデルでテスト" tabindex="-1">オリジナルデータの学習モデルでテスト <a class="header-anchor" href="#オリジナルデータの学習モデルでテスト" aria-label="Permalink to &quot;オリジナルデータの学習モデルでテスト&quot;">​</a></h3><p>ディアブロスとディアブロス亜種の画像を変換する学習モデルを作成しましたので，以下のコマンドでテストを実行します．<br> --nameでは/checkpointsの中にある学習モデルのディレクトリ名を記述します．<br> 学習モデルの名前は<code>latest_net_G.pth</code>としてください．<br> Aのデータ -&gt; Bのデータに変換するモデルは<code>＊＊＊_G_A.pth</code>で，Bのデータ -&gt; Aのデータに変換するのモデルは<code>＊＊＊_G_B.pth</code>です．<br> ※trainA・testAはディアブロス原種，trainB・testBはディアブロス亜種の画像となっています．<br><br> 変換画像は自動的に256x256の正方形に変換されて出力されます．オリジナルのサイズとアスペクト比を保持したい場合は， <code>--preprocess none</code>を追記してください．<br> ただし，GPUの負荷もハンパなく重くなります．僕の場合は，1920x1280と1080x720はGPUのメモリーをオーバーして，640x480で動きました．</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 現在ディレクトリ</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># /content/drive/My\\ Drive/diablos_gan/pytorch-CycleGAN-and-pix2pix</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 学習モデルの名前変更</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cp checkpoints</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">diablos_gan</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">latest_net_G_B.pth checkpoints</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">diablos_gan</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">latest_net_G.pth</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 学習モデルのテスト実行</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">python test.py </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dataroot datasets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">diablos_gan</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">testB \\</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">                --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name diablos_gan \\</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">                --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">results_dir .</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">results</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">diablos_gan</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \\</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">                --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">preprocess none \\</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">                --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model test </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">no_dropout</span></span></code></pre></div><h3 id="mhw版ディアブロス亜種の変換" tabindex="-1">MHW版ディアブロス亜種の変換 <a class="header-anchor" href="#mhw版ディアブロス亜種の変換" aria-label="Permalink to &quot;MHW版ディアブロス亜種の変換&quot;">​</a></h3><p>MHW版ディアブロス亜種の変換前画像<br> !(/image/mhw_real.png)</p><p>MHW版ディアブロス亜種の変換後画像<br> !(/image/mhw_fake.png)</p><h3 id="実写版ディアブロス亜種の変換" tabindex="-1">実写版ディアブロス亜種の変換 <a class="header-anchor" href="#実写版ディアブロス亜種の変換" aria-label="Permalink to &quot;実写版ディアブロス亜種の変換&quot;">​</a></h3><p>実写版ディアブロス亜種の変換前画像<br> !(/image/diablos_real.png)</p><p>実写版ディアブロス亜種の変換後画像<br> !(/image/diablos_fake.png)</p><h2 id="おまけ" tabindex="-1">おまけ <a class="header-anchor" href="#おまけ" aria-label="Permalink to &quot;おまけ&quot;">​</a></h2><p>最近発売したモンハンライズでは原種のディアブロスはでているので，イラストをディアブロス亜種に変換しました．</p><h3 id="mhr版ディアブロス-イラスト-の変換" tabindex="-1">MHR版ディアブロス(イラスト)の変換 <a class="header-anchor" href="#mhr版ディアブロス-イラスト-の変換" aria-label="Permalink to &quot;MHR版ディアブロス(イラスト)の変換&quot;">​</a></h3><p>MHR版ディアブロス(イラスト)の変換前画像<br> !(/image/mhr_illust_real.png)</p><p>MHR版ディアブロス(イラスト)の変換後画像<br> !(/image/mhr_illust_fake.png)</p><h2 id="まとめ" tabindex="-1">まとめ <a class="header-anchor" href="#まとめ" aria-label="Permalink to &quot;まとめ&quot;">​</a></h2><p>Python + CycleGanでオリジナルデータでの学習を兼ねて，ディアブロス(原種)とディアブロス亜種の変換を実施します<br> たった80枚の学習画像でも結構できていましたが，もう少し精度が向上するように手を加えていきます．</p><h2 id="参考サイト" tabindex="-1">参考サイト <a class="header-anchor" href="#参考サイト" aria-label="Permalink to &quot;参考サイト&quot;">​</a></h2><p><a href="https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix" target="_blank" rel="noreferrer">junyanz/pytorch-CycleGAN-and-pix2pix</a><br></p>`,32)),i(n,null,{default:l(()=>[i(a)]),_:1})])}const u=e(d,[["render",c]]);export{_ as __pageData,u as default};
