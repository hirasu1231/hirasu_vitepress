import{_ as e,c as p,j as a,a as k,G as i,w as l,ag as r,B as h,o}from"./chunks/framework.BDI6Vt0-.js";const d="/hirasu_vitepress/video/abstract_Broken_Heart_of_Gold.mp4",g="/hirasu_vitepress/video/ModernArt_Broken_Heart_of_Gold.mp4",E="/hirasu_vitepress/video/VisionaryArt_Broken_Heart_of_Gold.mp4",y="/hirasu_vitepress/video/textures_Broken_Heart_of_Gold.mp4",c="/hirasu_vitepress/video/biggan_Broken_Heart_of_Gold.mp4",F="/hirasu_vitepress/video/lucidsonicdreams.mp4",b=JSON.parse('{"title":"音楽に合わせて画像を変化させる「Lucid Sonic Dreams」を実装する","description":"音楽に合わせて画像を変化させる「Lucid Sonic Dreams」を実装します．","frontmatter":{"title":"音楽に合わせて画像を変化させる「Lucid Sonic Dreams」を実装する","description":"音楽に合わせて画像を変化させる「Lucid Sonic Dreams」を実装します．","date":"2021-12-24T00:00:00.000Z","category":["Python"],"tags":["Python","Jupyter","GAN"]},"headers":[],"relativePath":"posts/LucidSonicDreams.md","filePath":"posts/LucidSonicDreams.md"}'),u={name:"posts/LucidSonicDreams.md"};function m(_,s,A,f,B,D){const n=h("CallInArticleAdsense"),t=h("ClientOnly");return o(),p("div",null,[s[0]||(s[0]=a("p",null,[k("音楽に合わせて画像を変化させる「Lucid Sonic Dreams」を実装します．"),a("br")],-1)),s[1]||(s[1]=a("p",null,"ここでは，ワンオクの「Broken_Heart_of_Gold」に合わせた動画を作成します．",-1)),i(t,null,{default:l(()=>[i(n)]),_:1}),s[2]||(s[2]=r(`<h2 id="google-colabのファイル構成" tabindex="-1">Google Colabのファイル構成 <a class="header-anchor" href="#google-colabのファイル構成" aria-label="Permalink to &quot;Google Colabのファイル構成&quot;">​</a></h2><p>プロジェクトディレクトリはLucidSonicDreamsとしています．度々，省略しています．</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>LucidSonicDreams</span></span>
<span class="line"><span>├── /LucidSonicDreams</span></span>
<span class="line"><span>|   ├── /Broken_Heart_of_Gold</span></span>
<span class="line"><span>|   |   ├── Broken_Heart_of_Gold.m4a</span></span>
<span class="line"><span>|   |   └── (省略)</span></span>
<span class="line"><span>|   └── (省略)</span></span>
<span class="line"><span>└── lucidsonicdreams.ipynb</span></span></code></pre></div><h2 id="google-driveと連携" tabindex="-1">Google Driveと連携 <a class="header-anchor" href="#google-driveと連携" aria-label="Permalink to &quot;Google Driveと連携&quot;">​</a></h2><p>Google ColabとGoogle Driveを連携させて，gitから<a href="https://github.com/mikaelalafriz/lucid-sonic-dreams.git" target="_blank" rel="noreferrer">mikaelalafriz/lucid-sonic-dreams</a>をダウンロードします．<br></p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Google ColabとGoogle Driveを連携</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> google.colab </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> drive</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">drive.mount(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/content/drive&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ディレクトリの移動</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">content</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">drive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MyDrive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># gitのダウンロード</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git clone https:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">github.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Mukosame</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Anime2Sketch.git</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ls</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># gitのクローン</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">content</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">drive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">My\\ </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">Drive/music_generator/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git clone https:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">github.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mikaelalafriz</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lucid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sonic</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dreams.git</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 作業ディレクトリへの移動</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cd LucidSonicDreams</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ls</span></span></code></pre></div><h2 id="ライブラリのインストール" tabindex="-1">ライブラリのインストール <a class="header-anchor" href="#ライブラリのインストール" aria-label="Permalink to &quot;ライブラリのインストール&quot;">​</a></h2><p>下記のコードでライブラリのインストールします．</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pip install lucidsonicdreams</span></span></code></pre></div><h2 id="動画の作成" tabindex="-1">動画の作成 <a class="header-anchor" href="#動画の作成" aria-label="Permalink to &quot;動画の作成&quot;">​</a></h2><h3 id="スタイルの選択" tabindex="-1">スタイルの選択 <a class="header-anchor" href="#スタイルの選択" aria-label="Permalink to &quot;スタイルの選択&quot;">​</a></h3><p>スタイルを選択するには、<strong>style</strong>パラメータを使用します。このパラメータには、以下のいずれかを指定します。</p><ul><li><p>パッケージで提供されている有効なデフォルトスタイル名です。show_styles()**を実行すると、有効な値が表示されます。*Note: これらのスタイルはJustin Pinkneyによって<a href="https://github.com/justinpinkney/awesome-pretrained-stylegan2" target="_blank" rel="noreferrer">this repository</a>からロードされています。</p></li><li><p>事前に学習された StyleGAN ウェイトを含む .pkl ファイルへのパス。</p></li><li><p>noise_batch と class_batch パラメータを受け取り、Pillow Image のリストを出力するカスタム関数 (<strong>B.5</strong> の例を参照)</p></li></ul><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lucidsonicdreams </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> show_styles </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># スタイル参照</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">show_styles()</span></span></code></pre></div><h3 id="デフォルト設定の使用" tabindex="-1">デフォルト設定の使用 <a class="header-anchor" href="#デフォルト設定の使用" aria-label="Permalink to &quot;デフォルト設定の使用&quot;">​</a></h3><p>本パッケージでは、オーディオトラックのファイルパス<strong>とビデオ出力のファイル名</strong>のみが必要な引数となるように設定されています。このコードスニペットは、&quot;modern art &quot;スタイルと他のすべてのデフォルト設定を使用して、ビデオの45秒間の低解像度プレビューを出力します。</p><p>ここで使用されている曲は、Basically Saturday Night<strong>の</strong>Chemical Loveです。公式のミュージックビデオは<a href="https://youtu.be/Gi7oQrtyjKI" target="_blank" rel="noreferrer">ここ</a>で見ることができますし、<a href="https://open.spotify.com/artist/46tGdhXAQbTvxVOGgy0Fqu?si=E8mUjbWbR2uiiMR2MUc_4w" target="_blank" rel="noreferrer">Spotify</a>で聴くこともできますよ。</p><p>コードを実行しなくても、<a href="https://youtu.be/oGXfOmqFYTg" target="_blank" rel="noreferrer">ここ</a>をクリックすれば、全編のサンプルビデオを見ることができます。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lucidsonicdreams </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LucidSonicDream</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> google.colab </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> files</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LucidSonicDream(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">song</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./Broken_Heart_of_Gold/Broken_Heart_of_Gold.m4a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                    style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;abstract photos&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L.hallucinate(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./Broken_Heart_of_Gold/abstract_Broken_Heart_of_Gold.mp4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              resolution </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 360</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              start </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              duration </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 45</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><video width="360" height="360" controls><source src="`+d+`" type="video/mp4"></video><h2 id="チューニング・パラメータ-仕組み" tabindex="-1">チューニング・パラメータ - 仕組み <a class="header-anchor" href="#チューニング・パラメータ-仕組み" aria-label="Permalink to &quot;チューニング・パラメータ - 仕組み&quot;">​</a></h2><p>調整可能なパラメーターは30以上あり、音楽をどのようにビジュアル化するかについて、非常に柔軟に対応できます。しかし、ビジュアライザーがどのように機能するかを基本的に理解していれば、簡単に理解することができます。</p><h3 id="仕組み" tabindex="-1">仕組み <a class="header-anchor" href="#仕組み" aria-label="Permalink to &quot;仕組み&quot;">​</a></h3><ol><li>まず、出力画像に対応する入力ベクトルのバッチが初期化されます。これらのベクトル間の線形補間が生成され、これが「ベース」ベクトルとなります。</li><li>3つのコンポーネントがオーディオに反応します。<strong>Pulse</strong>, <strong>Motion</strong>, <strong>Class</strong> です。これらは &quot;基本 &quot;ベクトルを適宜変更します。</li></ol><ul><li><strong>Pulse</strong>, これは文字通り、音楽のビートに合わせてビジュアルが「脈打つ」様子を指します。デフォルトでは、オーディオのパーカッシブな要素に反応するように設定されています。</li><li><strong>Motion</strong> 音楽によってビジュアルがどのように「押し出される」または「加速される」かを意味し、デフォルトではオーディオのハーモニックな要素に反応するように設定されています。</li><li>Finally, <strong>Class</strong> , 生成された画像に表示されるオブジェクトのラベルを参照します（例えば、WikiArtスタイルの場合、クラスは、Van Gogh、Andy Warhol、Da Vinciなどを参照できます）。これは、オーディオのピッチに反応するように設定されており、各ノートがクラスの目立ち度をコントロールします。<em>注：</em> 利用可能なデフォルトのスタイルの中で、今のところクラスを使用しているのはWikiArtだけです。</li></ul><ol start="3"><li>最後に、コントラストやフラッシュなどの追加効果を映像に加えます。これらはデフォルトではオーディオのパーカッシブな要素に反応するように設定されています。</li></ol><h3 id="パラメータ" tabindex="-1">パラメータ <a class="header-anchor" href="#パラメータ" aria-label="Permalink to &quot;パラメータ&quot;">​</a></h3><p>さて、パラメータは7つのカテゴリーに分けることで、簡単に理解することができます。初期化」、「パルス」、「モーション」、「クラス」、「エフェクト」、「ビデオ」、「その他」です。</p><p>これでもまだ圧倒されるという方は、まず、以下のチューニングを行うことをお勧めします。</p><p><strong>speed_fpm</strong>, <strong>pulse_react</strong>, <strong>motion_react</strong> , <strong>class_pitch_react</strong>,</p><p>上記のパラメータから構築していきます。これらのパラメータは、最大の違いをもたらします。</p><h5 id="初期化" tabindex="-1"><strong>初期化</strong> <a class="header-anchor" href="#初期化" aria-label="Permalink to &quot;**初期化**&quot;">​</a></h5><ul><li><strong>speed_fpm</strong> (<em>Default: 12</em>) - FPMとは「Frames per Minute」の略です。これは、初期化されるイメージの数を決定するもので、多ければ多いほど、ビジュアルのモーフィングが速くなります。</li></ul><p>もし， <strong>speed_fpm = 0</strong>, の場合、1つの画像だけが初期化され、その1つの画像がオーディオに反応します。この場合、オーディオの無音部分には動きがありません。</p><h5 id="パルスパラメータ" tabindex="-1"><strong>パルスパラメータ</strong> <a class="header-anchor" href="#パルスパラメータ" aria-label="Permalink to &quot;**パルスパラメータ**&quot;">​</a></h5><ul><li><strong>pulse_react</strong> (<em>Default: 0.5</em>) - パルスの「強さ」を指定します。0～2の間で設定することをお勧めします。</li><li><strong>pulse_percussive</strong> (<em>Default: True</em>) - もし，<em>pulse_harmonic</em>がFalseの時にTrueと指定した場合、pulseはオーディオのパーカッシブな要素に反応します。</li><li><strong>pulse_harmonic</strong> (<em>Default: False</em>) - もし，<em>pulse_percussive</em>がFalseの時にTrueと指定した場合、パルスはオーディオのハーモニックな要素に反応します。</li></ul><p><em>Note</em>: 両方のパラメータがTrueの場合、または両方のパラメータがFalseの場合、Pulseは変更されていない「全体」のオーディオに反応します。</p><ul><li><strong>pulse_audio</strong> - パルスの制御に使用する別のオーディオファイルへのパス。孤立したドラム/パーカッションのトラックを利用できる場合は、この方法をお勧めします。渡した場合、<em>pulse_percussive</em>と<em>pulse_harmonic</em>は無視されます。<em>Note:</em> このパラメータはLucidSonicDreamオブジェクトを定義する際に渡されます。</li></ul><h5 id="モーションパラメータ" tabindex="-1"><strong>モーションパラメータ</strong> <a class="header-anchor" href="#モーションパラメータ" aria-label="Permalink to &quot;**モーションパラメータ**&quot;">​</a></h5><ul><li><strong>motion_react</strong> (<em>0.5</em>), <strong>motion_percussive</strong> (<em>False</em>), <strong>motion_harmonic</strong> (<em>True</em>), and <strong>motion_audio</strong> - 単純に、上記のパルスパラメータの「動き」に相当するものです。</li><li><strong>motion_randomness</strong> (<em>Default: 0.5</em>)- 動きのランダム性の度合い。高い値を設定すると、同じ映像が繰り返し表示されるのを防ぐことができます。0から1の範囲で指定してください。</li><li><strong>truncation</strong> (<em>Default: 1</em>) - 生成されるビジュアルの多様性をコントロールします。値が低いほどバラエティに富んでいます。<em>注意</em>。非常に低い値を設定すると、通常は「ぎらぎらした」ビジュアルになります。0から1の範囲で指定してください。</li></ul><h5 id="クラスパラメータ" tabindex="-1"><strong>クラスパラメータ</strong> <a class="header-anchor" href="#クラスパラメータ" aria-label="Permalink to &quot;**クラスパラメータ**&quot;">​</a></h5><p><em>(注：これらのパラメータの多くは、Matt Siegelman氏による<a href="https://github.com/msieg/deep-music-visualizer" target="_blank" rel="noreferrer">Deep Music Visualizer</a>プロジェクトに大きく影響されています)</em></p><ul><li><strong>classes</strong> - 最大で12個の数値オブジェクトラベルのリスト。何もない場合は、12個のラベルがランダムに選択されます。</li><li><strong>dominant_classes_first</strong> (<em>Default: False</em>)- Trueの場合、&quot;classes &quot;に渡されたリストは、降順で目立つようにソートされます。</li><li><strong>class_pitch_react</strong> (<em>Default: 0.5</em>)- pulse_react、motion_reactに相当するクラスです。0～2の間で設定することをお勧めします。</li><li><strong>class_smooth_seconds</strong> (<em>Default: 1</em>) - 各クラスのベクトル間をスムーズに補間するのにかかる秒数。この値が大きいほど、クラスの変化が「突然」ではなくなる。</li><li><strong>class_complexity</strong> (<em>Default: 1</em>) - 生成されるイメージの「complexity(複雑さ)」をコントロールします。低い値では、よりシンプルでありふれたイメージが生成され、高い値では、より複雑で奇妙なオブジェクトが生成される傾向があります。0〜1の間で設定することをお勧めします。</li><li><strong>class_shuffle_seconds</strong> (<em>Default: None</em>) - ラベルとノートのマッピングを再構成するタイムスタンプを制御します。これは、使用するオーディオの音程の範囲が限られているが、より多くのクラスを表示したい場合に推奨されます。値に<em>n</em>という数字を指定すると、<em>n</em>秒ごとにクラスがシャッフルされます。値が数字のリストである場合、これらの数字はクラスがシャッフルされるタイムスタンプ（秒単位）として使用されます。</li><li><strong>class_shuffle_strength</strong> (<em>Default: 0.5</em>) - クラスの再シャッフルの頻度を制御します。class_shuffle_secondsが指定された場合のみ適用されます。この値は0から1の間にしておくことをお勧めします。</li><li><strong>class_audio</strong> - pulse_audioとmotion_audioに相当するクラスです。LucidSonicDreamオブジェクトを定義する際に渡されます。</li></ul><h5 id="エフェクトパラメータ" tabindex="-1"><strong>エフェクトパラメータ</strong> <a class="header-anchor" href="#エフェクトパラメータ" aria-label="Permalink to &quot;**エフェクトパラメータ**&quot;">​</a></h5><ul><li><strong>contrast_strength</strong> (<em>Default: 0.5</em>) - デフォルトのコントラスト効果の強さ。0～1の間で設定することをお勧めします。</li><li><strong>contrast_percussive</strong> (<em>Default: True</em>) - trueの場合、オーディオのパーカッシブな要素に反応します。0から1の範囲でなければなりません。</li><li><strong>contrast_audio</strong> - 以前の &quot;audio &quot;引数と同等のもの。LucidSonicDreamオブジェクトを定義する際に渡されます。</li></ul><p><em>注</em>。これらの引数が何も渡されなかった場合、コントラスト効果は適用されません。</p><ul><li><strong>flash_strength</strong> (<em>0.5</em>), <strong>flash_percussive</strong> (<em>True</em>), and <strong>flash_audio</strong> - 前述の3つのパラメータに相当しますが、「フラッシュ」効果があります。これらの引数は0から1の間にしておくことをお勧めします。これらの引数が何も渡されない場合、フラッシュ効果は適用されません。</li><li><strong>custom_effects</strong> - List of custom, user-defined effects to apply (See <strong>B.4</strong>)</li></ul><h5 id="video-parameters" tabindex="-1"><strong>Video Parameters</strong> <a class="header-anchor" href="#video-parameters" aria-label="Permalink to &quot;**Video Parameters**&quot;">​</a></h5><ul><li><strong>resolution</strong> - 自明のことです。トライアル」レンダリングには低解像度が推奨されます。何も渡されなかった場合は、修正されていない高解像度の画像が使用されます。</li><li><strong>start</strong> (<em>Default: 0</em>) - 開始のタイムスタンプ（秒単位）</li><li><strong>duration</strong> - ビデオの長さを秒単位で指定します。何も指定しない場合は、音声の長さが使用されます。</li><li><strong>output_audio</strong> - ビデオの最終出力音声。song &quot;パラメータが指定されている場合は、その音声を上書きします（<strong>B.5</strong>参照）</li><li><strong>fps</strong> (<em>Default: 43</em>) - Video Frames Per Second.</li><li><strong>save_frames</strong> (<em>Default: False</em>) - trueの場合、すべての個別のビデオフレームをディスクに保存します。</li></ul><h5 id="other" tabindex="-1"><strong>Other</strong> <a class="header-anchor" href="#other" aria-label="Permalink to &quot;**Other**&quot;">​</a></h5><ul><li><strong>batch_size</strong> (<em>Default: 1</em>) - モデルに同時に供給されるベクターの数を決定します。一般的に、バッチサイズが大きいほど、明確に定義されていないイメージが出力されます。</li></ul><h3 id="例1-modern-art" tabindex="-1">例1：modern art <a class="header-anchor" href="#例1-modern-art" aria-label="Permalink to &quot;例1：modern art&quot;">​</a></h3><p>これはシンプルに、音に合わせて画像が変化します．</p><p>コードを実行しなくても、<a href="https://youtu.be/ztWCMm9cExY" target="_blank" rel="noreferrer">ここ</a>をクリックすれば、全編のサンプルビデオを見ることができます。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LucidSonicDream(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./Broken_Heart_of_Gold/Broken_Heart_of_Gold.m4a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                    style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;modern art&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L.hallucinate(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./Broken_Heart_of_Gold/ModernArt_Broken_Heart_of_Gold.mp4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              speed_fpm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              motion_percussive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              motion_react</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              contrast_strength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              flash_strength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><video width="360" height="360" controls><source src="`+g+`" type="video/mp4"></video><h3 id="例2-visionaryart-pkl" tabindex="-1">例2：VisionaryArt.pkl <a class="header-anchor" href="#例2-visionaryart-pkl" aria-label="Permalink to &quot;例2：VisionaryArt.pkl&quot;">​</a></h3><p>この例は、パルス、モーション、コントラスト、フラッシュの各反応を微妙に組み合わせて、全体的にトリッピーなスタイルを補完するシンプルな例です。</p><p>ここで使用されているスタイルウェイトは、<strong>Jeremy Torman</strong>氏によってトレーニングされたモデルから得られたものです。彼の作品は<a href="https://twitter.com/tormanjeremy" target="_blank" rel="noreferrer">Twitter</a>で見ることができますし、興味のある方は彼の<a href="https://www.reddit.com/r/deepdream/comments/leqwxs/stylegan2ada_pickle_file_in_comments_with_colab/" target="_blank" rel="noreferrer">オリジナルのReddit投稿</a>で詳細をご覧ください!</p><p>コードを実行しなくて元ネタのサンプルビデオを見るには<a href="https://youtu.be/iEFqcMrszH0" target="_blank" rel="noreferrer">ここ</a>をクリックしてください。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Download Style Weights </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ! gdown --id 19hNptJSXji_9h7DMJBVlEMe-izWXvkYQ</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LucidSonicDream(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">song</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./Broken_Heart_of_Gold/Broken_Heart_of_Gold.m4a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                    style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;VisionaryArt.pkl&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L.hallucinate(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">file_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./Broken_Heart_of_Gold/VisionaryArt_Broken_Heart_of_Gold.mp4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              pulse_react</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              motion_react</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              contrast_strength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              flash_strength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><video width="360" height="360" controls><source src="`+E+`" type="video/mp4"></video><h2 id="カスタムエフェクトの使用" tabindex="-1">カスタムエフェクトの使用 <a class="header-anchor" href="#カスタムエフェクトの使用" aria-label="Permalink to &quot;カスタムエフェクトの使用&quot;">​</a></h2><p>エフェクト関数を定義し、それをEffectsGeneratorオブジェクトに渡すことで、独自のリアクティブなカスタムエフェクトをビデオに適用することができます（以下参照）。</p><p>エフェクト関数には、以下のパラメータを含める必要があります。</p><ul><li><strong>array</strong> - エフェクトが適用される画像配列を指します。</li><li><strong>strength</strong> - pulse_react、contrast_strengthなどと同様の反応性パラメータ。</li><li><strong>amplitude</strong> - ある時点でのオーディオの音量を指します。これを、エフェクトの「強さ」をコントロールするパラメータに掛けるだけです。</li></ul><p>この関数は，出力画像を表す NumPy 配列を出力する必要があります．</p><p>この関数は，EffectsGenerator オブジェクトに渡され，次のようなパラメータを持ちます．</p><ul><li><strong>func</strong> - エフェクト機能</li><li><strong>audio</strong> - エフェクトをコントロールするオーディオ</li><li><strong>strength</strong> - 効果の強さ</li><li><strong>percussive</strong> - Trueの場合、エフェクトはオーディオのパーカッシブな要素に反応します。</li></ul><p>下の例で使われている曲は、<strong>Ekali</strong>のUnfaithです。フルトラックは<a href="https://youtu.be/8C4wgzP1KOI" target="_blank" rel="noreferrer">YouTube</a>または<a href="https://open.spotify.com/track/5UC6HF9VVgYMHQ7PcwcZNZ?si=hCIA2JMTQTC98zzPZfA3yQ" target="_blank" rel="noreferrer">Spotify</a>で聴くことができます。</p><p><a href="https://youtu.be/V7jo281HSwM" target="_blank" rel="noreferrer">ここ</a>をクリックすると、コードを実行することなくサンプルビデオを見ることができます。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numpy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> np </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> skimage.transform </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> swirl</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lucidsonicdreams </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EffectsGenerator</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> lucidsonicdreams </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LucidSonicDream</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> swirl_func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(array, strength, amplitude):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  swirled_image </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> swirl(array, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                        rotation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                        strength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> strength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> amplitude,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                        radius</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">650</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (swirled_image</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).astype(np.uint8)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">swirl_effect </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EffectsGenerator(swirl_func,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                                audio</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./Broken_Heart_of_Gold/Broken_Heart_of_Gold.m4a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                                strength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                                percussive</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LucidSonicDream(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./Broken_Heart_of_Gold/Broken_Heart_of_Gold.m4a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                    style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;textures&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L.hallucinate(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./Broken_Heart_of_Gold/textures_Broken_Heart_of_Gold.mp4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              motion_react</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              speed_fpm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              pulse_react</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              contrast_strength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              flash_strength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              custom_effects</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [swirl_effec)</span></span></code></pre></div><video width="360" height="360" controls><source src="`+y+`" type="video/mp4"></video><h2 id="カスタム可視化関数の使用" tabindex="-1">カスタム可視化関数の使用 <a class="header-anchor" href="#カスタム可視化関数の使用" aria-label="Permalink to &quot;カスタム可視化関数の使用&quot;">​</a></h2><p>最後に、StyleGANを使用せず、代わりにベクトルのバッチを取り込んでPillow画像を出力する任意のカスタム関数を定義することができます。この関数には、<strong>noise_batch</strong>と<strong>class_batch</strong>のパラメータが必要です。また、LucidSonicDreamオブジェクトを定義する際には、<strong>num_possible_classes</strong>と<strong>input_size</strong>を渡す必要があります。</p><p>以下の例では、Matt Siegelman氏による<a href="https://github.com/msieg/deep-music-visualizer" target="_blank" rel="noreferrer">Deep Music Visualizer</a>プロジェクトと同様に、事前に学習されたBigGANのPyTorch実装を用いてカスタム関数を定義しています。各クラスの数値ラベルは<a href="https://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a" target="_blank" rel="noreferrer">こちら</a>にあります。</p><p>使用した曲は、Porter Robinson<strong>の</strong>Sea of Voicesです。この曲は<a href="https://www.youtube.com/watch?v=lSooYPG-5Rg" target="_blank" rel="noreferrer">YouTube</a>や<a href="https://open.spotify.com/track/2lNFWUrxuNaQsf5I1pDTPr?si=MsD7GJUsRma4mkyfjbEhJg" target="_blank" rel="noreferrer">Spotify</a>で聴くことができます。なお、ボーカルが動きに影響を与えないようにするため、入力には[インストゥルメンタルバージョン]（<a href="https://youtu.be/2Bo0JqTmVwg%EF%BC%89%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E3%81%84%E3%81%BE%E3%81%99%E3%80%82" target="_blank" rel="noreferrer">https://youtu.be/2Bo0JqTmVwg）を使用しています。</a></p><p><a href="https://youtu.be/_TJCql7O9kU?t=180" target="_blank" rel="noreferrer">こちら</a>をクリックすると、コードを実行しなくても全編のサンプル映像を見ることができます。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pip install pytorch_pretrained_biggan</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pytorch_pretrained_biggan </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BigGAN, convert_to_images</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> torch</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">biggan </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BigGAN.from_pretrained(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;biggan-deep-512&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">biggan.to(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cuda:0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> biggan_func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(noise_batch, class_batch):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  noise_tensor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> torch.from_numpy(noise_batch).cuda()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  class_tensor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> torch.from_numpy(class_batch).cuda()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> torch.no_grad():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    output_tensor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> biggan(noise_tensor.float(), class_tensor.float(), </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">truncation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> convert_to_images(output_tensor.cpu())</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LucidSonicDream(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./Broken_Heart_of_Gold/Broken_Heart_of_Gold.m4a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                    style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> biggan_func, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                    input_shape</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                    num_possible_classes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L.hallucinate(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./Broken_Heart_of_Gold/biggan_Broken_Heart_of_Gold.mp4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              output_audio</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./Broken_Heart_of_Gold/Broken_Heart_of_Gold.m4a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              speed_fpm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              classes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">301</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">84</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">99</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">134</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">143</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">393</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">394</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              class_shuffle_seconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              class_shuffle_strength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              class_complexity</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              class_smooth_seconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              motion_react</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.35</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              flash_strength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              contrast_strength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><video width="360" height="360" controls><source src="`+c+`" type="video/mp4"></video><h2 id="番外編" tabindex="-1">番外編： <a class="header-anchor" href="#番外編" aria-label="Permalink to &quot;番外編：&quot;">​</a></h2><p>※音楽ファイル(m4a, mp3, ex)1つでは，実行できないものです．</p><p>この例では、複数のオーディオトラックを使用し、パラメータをより細かく調整することで、より複雑な例となっています。この例では、パルス、クラス、コントラストの反応をより鮮明にするために、独立したオーディオトラックを利用しています。</p><p>注：WikiArtスタイルを使ったクラスの数値ラベルは<a href="https://colab.research.google.com/github/Norod/my-colab-experiments/blob/master/WikiArt_Example_Generation_By_Peter_Baylies.ipynb" target="_blank" rel="noreferrer">こちら</a>にあります。</p><p><a href="https://youtu.be/l-nGC-ve7sI" target="_blank" rel="noreferrer">ここ</a>をクリックすると、コードを実行しなくてもフルレングスのサンプルビデオを見ることができます。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Main File(lucidsonicdreams_main.mp3)</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gdown </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> 1Vc2yC2F5iO0ScC5F0CzF_YB1YPGI2uUP</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Pulse File(lucidsonicdreams_paule.mp3)</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gdown </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> 1FY5MO6XqVu9abbdNQQY6C99RHxFGm36o</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Class File(lucidsonicdreams_class.mp3)</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gdown </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">id</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">qwcs8_Va58YqkHMdXDm9uef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RcH01gh</span></span></code></pre></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LucidSonicDream(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">song</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lucidsonicdreams_main.mp3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                    pulse_audio</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lucidsonicdreams_pulse.mp3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                    class_audio</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lucidsonicdreams_class.mp3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                    contrast_audio</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lucidsonicdreams_pulse.mp3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">                    style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;wikiart&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L.hallucinate(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;lucidsonicdreams.mp4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              resolution</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 360</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              start</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              duration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              pulse_react</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              motion_react</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              classes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">23</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">27</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">28</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">68</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">71</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">89</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              dominant_classes_first</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              class_shuffle_seconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              class_smooth_seconds</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              class_pitch_react</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              contrast_strength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">              flash_strength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><video width="360" height="360" controls><source src="`+F+'" type="video/mp4"></video><h2 id="まとめ" tabindex="-1">まとめ <a class="header-anchor" href="#まとめ" aria-label="Permalink to &quot;まとめ&quot;">​</a></h2><p>音楽に合わせて画像を変化させる「Lucid Sonic Dreams」を実装しました．<br></p><h2 id="参考サイト" tabindex="-1">参考サイト <a class="header-anchor" href="#参考サイト" aria-label="Permalink to &quot;参考サイト&quot;">​</a></h2><p><a href="https://github.com/mikaelalafriz/lucid-sonic-dreams.git" target="_blank" rel="noreferrer">mikaelalafriz/lucid-sonic-dreams</a></p>',94)),i(t,null,{default:l(()=>[i(n)]),_:1})])}const v=e(u,[["render",m]]);export{b as __pageData,v as default};
