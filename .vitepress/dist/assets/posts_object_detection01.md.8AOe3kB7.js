import{_ as e,c as h,j as p,a as k,G as a,w as l,ag as r,B as t,o}from"./chunks/framework.BDI6Vt0-.js";const b=JSON.parse('{"title":"COCOデータセットをダウンロードし，特定のクラスを抽出する","description":"YOLO・SSDの物体検出の実施のために，COCOデータセットをダウンロードし，特定のクラスだけを抽出します．","frontmatter":{"title":"COCOデータセットをダウンロードし，特定のクラスを抽出する","description":"YOLO・SSDの物体検出の実施のために，COCOデータセットをダウンロードし，特定のクラスだけを抽出します．","date":"2021-02-21T00:00:00.000Z","category":["Python"],"tags":["Python","Jupyter","Object_Detection","YOLO","Tracking","Google_Colaboratory","Keras","Darknet"]},"headers":[],"relativePath":"posts/object_detection01.md","filePath":"posts/object_detection01.md"}'),d={name:"posts/object_detection01.md"};function c(E,s,g,y,F,_){const i=t("CallInArticleAdsense"),n=t("ClientOnly");return o(),h("div",null,[s[0]||(s[0]=p("p",null,[k("YOLO・SSDの物体検出の実施のために，まずCOCOデータセットをダウンロードし，特定のクラスだけを抽出します．"),p("br")],-1)),a(n,null,{default:l(()=>[a(i)]),_:1}),s[1]||(s[1]=r(`<p>COCOデータセットは物体検出・セグメーテーション等の学習に使え，無料で大量に公開されているデータセットです．<br> プログラムはJupyter Notebook形式で作成しています．<br> 最終的に，Youtubeの<a href="https://www.youtube.com/watch?v=wnRH3-CIk4I" target="_blank" rel="noreferrer">平成24年 元旦配達出発式</a>のIDを振り分けるトラッキングも含めたバイクのカウントを実施します．</p><h2 id="cocoデータセットのダウンロード" tabindex="-1">COCOデータセットのダウンロード <a class="header-anchor" href="#cocoデータセットのダウンロード" aria-label="Permalink to &quot;COCOデータセットのダウンロード&quot;">​</a></h2><p><a href="https://gist.github.com/mkocabas/a6177fc00315403d31572e17700d7fd9" target="_blank" rel="noreferrer">mkocabas/coco.sh</a>のcoco.shを実行し，COCOデータセットをダウンロードします．<br> 大容量データなので，ダウンロードに時間がかかります．<br><a href="https://cocodataset.org/#download" target="_blank" rel="noreferrer">coco 公式HP</a>からもダウンロードできます.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sh coco.sh</span></span></code></pre></div><h2 id="ダウンロード後のファイル構成" tabindex="-1">ダウンロード後のファイル構成 <a class="header-anchor" href="#ダウンロード後のファイル構成" aria-label="Permalink to &quot;ダウンロード後のファイル構成&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>coco</span></span>
<span class="line"><span>├── annotations</span></span>
<span class="line"><span>│   ├── _deprecated-challenge2017</span></span>
<span class="line"><span>│   │   ├── train-ids.txt</span></span>
<span class="line"><span>│   │   └── val-ids.txt</span></span>
<span class="line"><span>│   ├── captions_train2017.json</span></span>
<span class="line"><span>│   ├── captions_val2017.json</span></span>
<span class="line"><span>│   ├── image_info_test-dev2017.json</span></span>
<span class="line"><span>│   ├── image_info_test2017.json</span></span>
<span class="line"><span>│   ├── image_info_unlabeled2017.json</span></span>
<span class="line"><span>│   ├── instances_train2017.json</span></span>
<span class="line"><span>│   ├── instances_val2017.json</span></span>
<span class="line"><span>│   ├── person_keypoints_train2017.json</span></span>
<span class="line"><span>│   ├── person_keypoints_val2017.json</span></span>
<span class="line"><span>│   ├── stuff_train2017_pixelmaps.zip</span></span>
<span class="line"><span>│   ├── stuff_train2017.json</span></span>
<span class="line"><span>│   ├── stuff_val2017_pixelmaps.zip</span></span>
<span class="line"><span>│   └── stuff_val2017.json</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>└── images</span></span>
<span class="line"><span>    ├── test2017</span></span>
<span class="line"><span>    ├── train2017</span></span>
<span class="line"><span>    ├── unlabeled2017</span></span>
<span class="line"><span>    └── val2017</span></span></code></pre></div><h2 id="cocoのデータセットの整理" tabindex="-1">cocoのデータセットの整理 <a class="header-anchor" href="#cocoのデータセットの整理" aria-label="Permalink to &quot;cocoのデータセットの整理&quot;">​</a></h2><p>画像のアノテーション情報を取得し，cocoのデータセットの中からバイク(motorcycle)だけを抽出します．</p><h3 id="アノテーション情報からクラスidを確認" tabindex="-1">アノテーション情報からクラスIDを確認 <a class="header-anchor" href="#アノテーション情報からクラスidを確認" aria-label="Permalink to &quot;アノテーション情報からクラスIDを確認&quot;">​</a></h3><p>jsonファイルから画像のアノテーション情報を取得し，クラスIDのリストからバイク(motorcycle)のクラスIDを確認します.<br> そして，あとでdef文にまとめるために引数もどきを準備しています．</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 引数もどき</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;val&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # train or val</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">year </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2017</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">coco_data_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(year)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 画像のアノテーション情報を取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./coco/annotations/instances_</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.json&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.format(coco_data_type)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jfile, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;r&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fp:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> json.load(fp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># クラスIDのリストを取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">display(pic[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;categories&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#jupyter用のprint文</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># [{&#39;supercategory&#39;: &#39;person&#39;, &#39;id&#39;: 1, &#39;name&#39;: &#39;person&#39;},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#  {&#39;supercategory&#39;: &#39;vehicle&#39;, &#39;id&#39;: 2, &#39;name&#39;: &#39;bicycle&#39;},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#  {&#39;supercategory&#39;: &#39;vehicle&#39;, &#39;id&#39;: 3, &#39;name&#39;: &#39;car&#39;},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#  {&#39;supercategory&#39;: &#39;vehicle&#39;, &#39;id&#39;: 4, &#39;name&#39;: &#39;motorcycle&#39;},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#  ・</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#  ・</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#  ・</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#  {&#39;supercategory&#39;: &#39;indoor&#39;, &#39;id&#39;: 89, &#39;name&#39;: &#39;hair drier&#39;},</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#  {&#39;supercategory&#39;: &#39;indoor&#39;, &#39;id&#39;: 90, &#39;name&#39;: &#39;toothbrush&#39;}]</span></span></code></pre></div><h3 id="アノテーション情報からバイクの物だけ抽出" tabindex="-1">アノテーション情報からバイクの物だけ抽出 <a class="header-anchor" href="#アノテーション情報からバイクの物だけ抽出" aria-label="Permalink to &quot;アノテーション情報からバイクの物だけ抽出&quot;">​</a></h3><p>jsonファイルからバイク(motorcycle)のクラスIDを確認したので，jsonファイルから更に画像ファイル名とBountingBoxの情報を取得します.<br> 画像ファイル名は，画像IDを12桁ゼロ埋めで格納されています．(111 -&gt; 000000000111)</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {&#39;supercategory&#39;: &#39;vehicle&#39;, &#39;id&#39;: 4, &#39;name&#39;: &#39;motorcycle&#39;}</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 引数もどき</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;val&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # train or val</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">year </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2017</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pic</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">category_ids </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ディレクトリの設定</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">coco_data_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data_type </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(year)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> anno_info </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pic[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;annotations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">][</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 入力画像名の抽出</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    image_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> anno_info[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;image_id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    filename </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.join(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(image_id).zfill(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;.jpg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    coco_image_path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os.path.join(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;coco&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;images&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, coco_data_type, filename)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # category_id:4-bike</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> anno_info[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;category_id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> category_ids:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # ファイル名, カテゴリー, bbox情報</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # bbox情報は[左上x座標, 左上y座標, 幅, 高さ]です</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(coco_image_path, anno_info[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;category_id&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], anno_info[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bbox&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        break</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># coco/images/val2017/000000356387.jpg 4 [139.71, 265.98, 127.69, 66.1]</span></span></code></pre></div><p><code>000000356387.jpg</code><br> !(/image/000000356387.jpg)</p><h2 id="まとめ" tabindex="-1">まとめ <a class="header-anchor" href="#まとめ" aria-label="Permalink to &quot;まとめ&quot;">​</a></h2><p>ここまででYOLO・SSDの物体検出の実施のために，まずCOCOデータセットをダウンロードし，特定のクラスだけを抽出しました．<br> 次からはDarknetとKeras-yolov4の各々の入力形式に整理します．</p><h2 id="参考サイト" tabindex="-1">参考サイト <a class="header-anchor" href="#参考サイト" aria-label="Permalink to &quot;参考サイト&quot;">​</a></h2><p><a href="https://cocodataset.org/#download" target="_blank" rel="noreferrer">coco 公式HP</a><br><a href="https://gist.github.com/mkocabas/a6177fc00315403d31572e17700d7fd9" target="_blank" rel="noreferrer">mkocabas/coco.sh</a><br><a href="https://qiita.com/leetmikeal/items/7c0d23e39bf38ab8be23" target="_blank" rel="noreferrer">画像を扱う機械学習のためのデータセットまとめ</a><br></p>`,19)),a(n,null,{default:l(()=>[a(i)]),_:1})])}const C=e(d,[["render",c]]);export{b as __pageData,C as default};
