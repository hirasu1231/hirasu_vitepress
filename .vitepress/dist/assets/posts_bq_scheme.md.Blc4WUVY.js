import{_ as l,c as p,j as h,G as i,w as n,ag as k,B as e,o as r}from"./chunks/framework.BDI6Vt0-.js";const m=JSON.parse('{"title":"BigQueryのカラム設定を簡単に","description":"BigQueryのカラム設定を簡単にします","frontmatter":{"title":"BigQueryのカラム設定を簡単に","description":"BigQueryのカラム設定を簡単にします","date":"2023-4-8","category":["Python"],"tags":["Python","GIS","kepler","Colabratry"]},"headers":[],"relativePath":"posts/bq_scheme.md","filePath":"posts/bq_scheme.md"}'),o={name:"posts/bq_scheme.md"};function d(c,s,E,g,y,u){const a=e("CallInArticleAdsense"),t=e("ClientOnly");return r(),p("div",null,[s[0]||(s[0]=h("p",null,"BigQueryのカラム設定を簡単にします",-1)),i(t,null,{default:n(()=>[i(a)]),_:1}),s[1]||(s[1]=k(`<h2 id="latlonを抽出" tabindex="-1">latlonを抽出 <a class="header-anchor" href="#latlonを抽出" aria-label="Permalink to &quot;latlonを抽出&quot;">​</a></h2><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./data.csv&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> df.columns:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:STRING,&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>aa:STRING, bb:STRING, cc:STRING, dd:STRING,</p><p>上記をコピーして，JSON形式に切り替えて貼り付ける</p><h2 id="まとめ" tabindex="-1">まとめ <a class="header-anchor" href="#まとめ" aria-label="Permalink to &quot;まとめ&quot;">​</a></h2><p>BigQueryのカラム設定を簡単にしました。</p>`,6)),i(t,null,{default:n(()=>[i(a)]),_:1})])}const F=l(o,[["render",d]]);export{m as __pageData,F as default};
