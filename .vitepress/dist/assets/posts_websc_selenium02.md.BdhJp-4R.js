import{_ as h,c as p,j as n,a as r,G as i,w as t,ag as k,B as l,o as d}from"./chunks/framework.BDI6Vt0-.js";const _=JSON.parse('{"title":"Python＋Docker＋Selenium＋Chromeでウェブスクレイピングをする part2","description":"Python＋Docker＋Selenium＋Chromeで甘茶の音楽工房ウェブスクレイピングします．本稿では，seleniumの操作を検索しながら必要な工程を実装します．","frontmatter":{"title":"Python＋Docker＋Selenium＋Chromeでウェブスクレイピングをする part2","description":"Python＋Docker＋Selenium＋Chromeで甘茶の音楽工房ウェブスクレイピングします．本稿では，seleniumの操作を検索しながら必要な工程を実装します．","date":"2021-02-12T00:00:00.000Z","category":["Python"],"tags":["Python","Jupyter","Docker","Selenium","Web_Scraping"]},"headers":[],"relativePath":"posts/websc_selenium02.md","filePath":"posts/websc_selenium02.md"}'),o={name:"posts/websc_selenium02.md"};function E(g,s,c,m,y,u){const a=l("CallInArticleAdsense"),e=l("ClientOnly");return d(),p("div",null,[s[0]||(s[0]=n("p",null,[r("Python＋Docker＋Selenium＋Chromeで甘茶の音楽工房ウェブスクレイピングします．本稿では，seleniumの操作を検索しながら必要な工程を実装します．jupyterだと楽です．"),n("br")],-1)),i(e,null,{default:t(()=>[i(a)]),_:1}),s[1]||(s[1]=k(`<p>作業用BGMとして<a href="https://amachamusic.chagasi.com/image_kurai.html" target="_blank" rel="noreferrer">甘茶の音楽工房</a>の音楽をダウンロードして聞いていました．いい加減面倒臭くなってきたので，ウェブスクレイピングでダウンロードしていきます．<br></p><h2 id="seleniumの操作" tabindex="-1">Seleniumの操作 <a class="header-anchor" href="#seleniumの操作" aria-label="Permalink to &quot;Seleniumの操作&quot;">​</a></h2><h3 id="モジュール" tabindex="-1">モジュール <a class="header-anchor" href="#モジュール" aria-label="Permalink to &quot;モジュール&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># coding: UTF-8</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> urllib.request</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selenium </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> webdriver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selenium.webdriver.chrome.options </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Options</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> selene.driver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SeleneDriver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> webdriver_manager.utils </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chrome_version</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> webdriver_manager.chrome </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ChromeDriverManager</span></span></code></pre></div><h3 id="ページソースの表示" tabindex="-1">ページソースの表示 <a class="header-anchor" href="#ページソースの表示" aria-label="Permalink to &quot;ページソースの表示&quot;">​</a></h3><p>seleniumでイメージ音楽のページソースを取得します．</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ページソースの表示</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">driver.page_source</span></span></code></pre></div><h3 id="ページ一覧の取得" tabindex="-1">ページ一覧の取得 <a class="header-anchor" href="#ページ一覧の取得" aria-label="Permalink to &quot;ページ一覧の取得&quot;">​</a></h3><p>イメージ音楽のページから，2ページ目,3ページ目のURLを取得します．<br> 2ページ目,3ページ目のURLを示すclass名のpagerは1箇所しかないので,find_element_by_class_nameを使います．単数形のelementですので注意してください．</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># classで指定(1つ：find_element_by_class_name)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ※ find_element!!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">element </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> driver.find_element_by_class_name(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pager&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2ページ目,3ページ目のURLを示すtagを取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">aPageTags </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> element.find_elements_by_tag_name(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># tagから2ページ目,3ページ目のURLを取得</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aPageTag </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aPageTags:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # tagからhref要素を取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    page_url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aPageTag.get_attribute(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;href&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page_url)</span></span></code></pre></div><h3 id="webelementのソース取得" tabindex="-1">WebElementのソース取得 <a class="header-anchor" href="#webelementのソース取得" aria-label="Permalink to &quot;WebElementのソース取得&quot;">​</a></h3><p>find_element_by_class_name()で取得したWebElementのソースを確認します．</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(element.get_attribute(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;innerHTML&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># WebElementからhtmlを取得</span></span></code></pre></div><h3 id="mp3のダウンロード先のurl" tabindex="-1">mp3のダウンロード先のURL <a class="header-anchor" href="#mp3のダウンロード先のurl" aria-label="Permalink to &quot;mp3のダウンロード先のURL&quot;">​</a></h3><p>イメージ音楽のページから，各mp3のダウンロード先のURLを取得します．<br> イメージとしては，右クリックで「リンク先をダウンロード」する際の参照先となるURLを探す作業です．<br> mp3のURLを示すclass名のdownloadは複数箇所あるので,find_elements_by_class_nameを使います．複数形のelementsですので注意してください．．<br> 取得した各mp3の詳細ページのURLを元にダウンロード先のURLに設定されていたので，ダウンロード先のURLはreplace()で置換して取得しました．</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># classで指定(複数：find_elements_by_class_name)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ※ find_elements!!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">elements </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> driver.find_elements_by_class_name(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;download&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> element </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> elements:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    #print(element.get_attribute(&#39;innerHTML&#39;)) # WebElementからhtmlを取得</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # mp3の詳細ページのURL,tagで取得</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aTag </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> element.find_element_by_tag_name(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # mp3のダウンロードページのURL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dlurl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aTag.get_attribute(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;href&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).replace(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;music_&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mp3/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).replace(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.mp3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="mp3のダウンロード" tabindex="-1">mp3のダウンロード <a class="header-anchor" href="#mp3のダウンロード" aria-label="Permalink to &quot;mp3のダウンロード&quot;">​</a></h3><p>取得したmp3のURLからmp3ファイルをダウンロードします．イメージとしては，リンク先をダウンロードの作業です．</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dlfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;bgm/&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dlurl.split(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 保存ファイル名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">urllib.request.urlretrieve(dlurl, dlfile) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#ダウンロード実行:要はリンク先をダウンロード</span></span></code></pre></div><h2 id="まとめ" tabindex="-1">まとめ <a class="header-anchor" href="#まとめ" aria-label="Permalink to &quot;まとめ&quot;">​</a></h2><p>ここまででおおよそのseleniumの操作を検索しながら，必要な工程を実装しました．次の記事でdef文でまとめようと思います．</p><h2 id="参考サイト" tabindex="-1">参考サイト <a class="header-anchor" href="#参考サイト" aria-label="Permalink to &quot;参考サイト&quot;">​</a></h2><p><a href="https://qiita.com/Chanmoro/items/9a3c86bb465c1cce738a" target="_blank" rel="noreferrer">10分で理解する Selenium</a><br><a href="https://qiita.com/kei0919/items/f6f696169c92c936374c" target="_blank" rel="noreferrer">Dockerコンテナからseleniumを使ってスクレイピング</a><br><a href="https://qiita.com/maroKanatani/items/e52984f37cc5474ccd98" target="_blank" rel="noreferrer">Python×SeleniumでWebスクレイピング実践</a><br><a href="https://qiita.com/mochio/items/dc9935ee607895420186" target="_blank" rel="noreferrer">Selenium webdriverよく使う操作メソッドまとめ</a><br><a href="https://qiita.com/sikkim/items/447b72e6ec45849058cd" target="_blank" rel="noreferrer">Docker上でSeleniumとHeadless ChromeとPython3を動かす</a><br><a href="https://engineeeer.com/python-selenium-webelement-get-html/" target="_blank" rel="noreferrer">【Python】seleniumでWebElementからhtmlを取得する</a><br><a href="https://qiita.com/memakura/items/f80d2e2c59514cfc14c9" target="_blank" rel="noreferrer">Python + Selenium + Chrome でファイル保存まわり</a></p>`,23)),i(e,null,{default:t(()=>[i(a)]),_:1})])}const F=h(o,[["render",E]]);export{_ as __pageData,F as default};
